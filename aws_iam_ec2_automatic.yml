---
- hosts: localhost
  gather_facts: no
  vars_files:
    - keys.yml
  tasks:
    - name: Create new IAM user
      iam:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        iam_type: user
        state: present
        name: #give username
        password: # set password
    - name: Create new group with policy and add user
      iam_group:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        name: ansible_project
        managed_policy:
          - arn:aws:iam::aws:policy/AdministratorAccess 
        users:
          - #user given above
        state: present
    - name: Create new IAM role
      iam_role:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        name: ansibleRole
        assume_role_policy_document: "{{ lookup('file','policy.json') }}"
        description: This role was for ansible project
      register: iam_role
    - debug:
        var: iam_role
  vars:
      region: us-east-1
      instance_type: t2.micro
      ami: # linux-2 ami image
      keypair: # pem file name
      subnetid: # subnet id
      aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
      aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
  tasks:
    - name: Create an ec2 instance
      ec2:
         key_name: "{{ keypair }}"
         instance_type: "{{ instance_type }}"
         image: "{{ ami }}"
         aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
         aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
         wait: true
         region: "{{ region }}"
         count: 1  # default
         count_tag:
            Name: # whatever name you want
         instance_tags:
            Name: # whatever name you want
         vpc_subnet_id: "{{ subnetid }}"
         assign_public_ip: yes
      register: ec2
  vars:
    UNIQUE_BUCKET_NAME: ansible-bucket-456
  tasks:
    - name: Create new S3 bucket
      aws_s3:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        bucket: "{{ UNIQUE_BUCKET_NAME }}"
        mode: create
    - name: Add file to bucket
      aws_s3:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        bucket: "{{ UNIQUE_BUCKET_NAME }}"
        mode: put
        object: #you object
        src: #path to object    